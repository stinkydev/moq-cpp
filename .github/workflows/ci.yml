name: Build and Test

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        
    runs-on: ${{ matrix.os }}
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable
      
    - name: Install CMake
      uses: lukka/get-cmake@latest
      
    - name: Setup vcpkg (Windows)
      if: runner.os == 'Windows'
      uses: lukka/run-vcpkg@v11
      
    - name: Configure CMake
      run: cmake -B build -DCMAKE_BUILD_TYPE=Release
      
    - name: Build
      run: cmake --build build --parallel
      
    - name: Test
      run: |
        cd build
        if [ "$RUNNER_OS" == "Windows" ]; then
          ./moq_example.exe
        else
          ./moq_example
        fi
      shell: bash

  rust-tests:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable
      
    - name: Run Rust tests
      run: cargo test --manifest-path moq-ffi/Cargo.toml
      
    - name: Check Rust formatting
      run: cargo fmt --manifest-path moq-ffi/Cargo.toml --check
      
    - name: Run Clippy
      run: cargo clippy --manifest-path moq-ffi/Cargo.toml -- -D warnings
